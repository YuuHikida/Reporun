@using System.Security.Claims;
@model IEnumerable<業務報告システム.Models.Todo>

@{
    ViewData["Title"] = "Index";
    var loginUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}
@if (TempData["AlertTodo"] != null)
{
    <div class="alert alert-success alert-dismissable fade show m-1" role="alert">
        @TempData["AlertTodo"]
        <button class="btn-close" type="button" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


    <h1>タスク一覧</h1>
    <p>
    <a asp-action="Create" 　class="btn btn-warning me-1">新規作成</a>
    </p>


@* <div> *@
<div class="container-for-grid">
        @foreach (var item in Model)
        {
            @if (loginUserId.Equals(item.UserId))
            {
                <div >
                    <div class="card " onmouseover="showHidden(this)" onmouseout="hideHidden(this)">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div >
                                    <div class="d-flex justify-content-center">
                                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.TaskName)</h5>
                                        @switch(@item.Progress)
                                        {
                                            case 0:
                                                <p class="text-danger fw-bold">進捗 : 0%</p>
                                                break;
                                            case 1:
                                                <p class="text-danger fw-bold">進捗 : 10%</p>
                                                break;
                                            case 2:
                                                <p class="text-danger fw-bold">進捗 : 20%</p>
                                                break;
                                            case 3:
                                                <p class="text-danger fw-bold">進捗 : 30%</p>
                                                break;
                                            case 4:
                                                <p class="text-danger fw-bold">進捗 : 40%</p>
                                                break;
                                            case 5:
                                                <p class="fw-bold">進捗 : 50%</p>
                                                break;
                                            case 6:
                                                <p class="fw-bold">進捗 : 60%</p>
                                                break;
                                            case 7:
                                                <p class="fw-bold">進捗 : 70%</p>
                                                break;
                                            case 8:
                                                <p class="fw-bold text-success">進捗 : 80%</p>
                                                break;
                                            case 9:
                                                <p class="fw-bold text-success">進捗 : 90%</p>
                                                break;
                                            case 10:
                                                <p class="fw-bold text-success">進捗 : 100%</p>
                                                break;
                                        }
                                    </div>
                                    <p class="card-text custom-hidden" style="display: none;">開始日: @Html.DisplayFor(modelItem => item.StartDate)</p>
                                    <p class="card-text custom-hidden" style="display: none;">終了日: @Html.DisplayFor(modelItem => item.EndDate)</p>
                                    <p class="card-text custom-hidden" style="display: none;">コメント: @Html.DisplayFor(modelItem => item.Comment)</p>
                                </div>
                                <div class="d-flex justify-content-center align-items-end">
                                <a href="@Url.Action("Edit", new { id = item.TodoId })" class="btn btn-warning me-1">編集</a>
                                    <form asp-action="Delete" onSubmit="return check()">
                                        <input type="hidden" name="id" value="@item.TodoId" />
                                        <button type="submit" class="btn btn-danger">削除</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
@* </div> *@

<script>
    function check() {
        if (window.confirm('このタスクを削除しますか？')) {
            return true;
        } else {
            return false;
        }
    }

    function showHidden(card) {
        var hiddenElements = card.getElementsByClassName("custom-hidden");
        for (var i = 0; i < hiddenElements.length; i++) {
            hiddenElements[i].style.display = "block";
        }
    }

    function hideHidden(card) {
        var hiddenElements = card.getElementsByClassName("custom-hidden");
        for (var i = 0; i < hiddenElements.length; i++) {
            hiddenElements[i].style.display = "none";
        }
    }
</script>
