@using System.Security.Claims;
@model IEnumerable<業務報告システム.Models.Todo>

@{
    ViewData["Title"] = "Index";
    var loginUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}
@if (TempData["AlertTodo"] != null)
{
    <div class="alert alert-success alert-dismissable fade show m-1" role="alert">
        @TempData["AlertTodo"]
        <button class="btn-close" type="button" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="mgr-center">
    <h1>タスク一覧</h1>
    <p>
        <a asp-action="Create" 　class="btn btn-warning me-1">新規作成</a>
    </p>
</div>

<div class="container-for-grid">
    @foreach (var item in Model)
    {
        <div>
            <div class="card " onmouseover="showHidden(this)" onmouseout="hideHidden(this)">
                <div class="card-body">
                    <div>
                        <div style="height: 150px;">
                            <div class="d-flex justify-content-between align-items-center">
                                    <h5 class="fw-bold mt-2 todoTitle">@Html.DisplayFor(modelItem => item.TaskName)</h5>
                                <div class="progress mt-2 todoProgress">
                                    <div class="progress-bar" role="progressbar" style="width: @(item.Progress * 10)%;
                                     @if (item.Progress >= 0 && item.Progress <= 3)
                                     {
                                                <text>background-color: #dc143c; </text>
                                        }
                                        else if (item.Progress >= 4 && item.Progress <= 6)
                                        {
                                            <text>background-color: #4169e1; </text>
                                        }
                                        else if (item.Progress >= 7 && item.Progress <= 9)
                                        {
                                            <text>background-color: #32cd32;</text>
                                        }
                                        else if (item.Progress == 10)
                                        {
                                            <text>background-color: #00ff00;</text>
                                        }
                                        " aria-valuenow="@item.Progress" aria-valuemin="0" aria-valuemax="10">
                                    </div>
                                </div>
                                @{
                                    var remainingDays = (item.EndDate - DateTime.Now.Date).TotalDays;
                                }
                                @if (remainingDays > 0)
                                {
                                    <p class=" fw-bold remainingDaysStatus" style="font-size:13px; margin-top:11px;">
                                        <span style="color: green; font-size:13px; width: 80px;">あと @remainingDays 日</span>
                                    </p>
                                }
                                else if (remainingDays == 0)
                                {
                                    <p class=" fw-bold remainingDaysStatus" style="font-size:13px; margin-top:11px;">
                                    <span style="color: red; font-size:13px; width: 80px;">期限当日！</span>
                                    </p>
                                }
                                else
                                {
                                    <p class="fw-bold remainingDaysStatus" style="font-size:13px; margin-top:11px;">
                                    <span style="color: red; font-size:13px; width: 80px;">期限切れ</span>
                                    </p>
                                }
                                <div class="justify-content-center align-items-center" style="height: 145px; padding: 20px;">
                                    <a href="@Url.Action("Edit", new { id = item.TodoId })" class="btn btn-warning me-1">編集</a>
                                    <form asp-action="Delete" onSubmit="return check()">
                                        <input type="hidden" name="id" value="@item.TodoId" />
                                        <button type="submit" class="btn btn-danger">削除</button>
                                    </form>
                                </div>
                             </div>
                        </div>
                        <p class="card-text custom-hidden" style="display: none;">開始日: @Html.DisplayFor(modelItem => item.StartDate)</p>
                        <p class="card-text custom-hidden" style="display: none;">終了日: @Html.DisplayFor(modelItem => item.EndDate)</p>
                        <p class="card-text custom-hidden" style="display: none;">詳細: @Html.DisplayFor(modelItem => item.Comment)</p>
                        @if (item.Progress <= 4)
                        {
                            <p class="card-text custom-hidden text-danger fw-bold" style="display: none; font-size:13px; margin-top:11px;">
                                進捗: @(item.Progress * 10)%
                            </p>
                        }
                        else if (item.Progress <= 7)
                        {
                            <p class="card-text custom-hidden fw-bold" style="display: none; font-size:13px; margin-top:11px;">
                                進捗: @(item.Progress * 10)%
                            </p>
                        }
                        else
                        {
                            <p class="card-text custom-hidden text-success fw-bold" style="display: none; font-size:13px; margin-top:11px;">
                                進捗: @(item.Progress * 10)%
                            </p>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script>
    function check() {
        if (window.confirm('このタスクを削除しますか？')) {
            return true;
        } else {
            return false;
        }
    }

    function showHidden(card) {
        var hiddenElements = card.getElementsByClassName("custom-hidden");
        for (var i = 0; i < hiddenElements.length; i++) {
            hiddenElements[i].style.display = "block";
        }
    }

    function hideHidden(card) {
        var hiddenElements = card.getElementsByClassName("custom-hidden");
        for (var i = 0; i < hiddenElements.length; i++) {
            hiddenElements[i].style.display = "none";
        }
    }
</script>
